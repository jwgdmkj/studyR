a<-(1,2,3,4)
1+2
a<-c(1,2,3,4,5,6,7)
print(a)
//패키지 설치
install.packages("lm")
//패키지 설치
install.packages("ln")
//패키지 설치
install.packages("tm")
library(tm)
//패키지 설치
install.packages("tm")
update.packages(ask=F) //업데이트를 묻지 않고 하도록 함
update.packages(ask=F) //업데이트를 묻지 않고 하도록 함
update.packages(ask=F) //업데이트를 묻지 않고 하도록 함
remove.packages("tm")
//update.packages(ask=F) //업데이트를 묻지 않고 하도록 함
remove.packages("tm")
a<-3
b<-'A'
b
c<-c(1,2,3,4,5)
d<-c('a','b','c','d','e')
ls()
ls(c) //리스트출력 함수
remove(d)
d
rm(list=ls())
a
b<-c('A','B','C','D','E')
a<-c(1,2,3,4,5)
b<-c('A','B','C','D','E')
b<-c('A','B','C','D','E')
c<-factor(c('남','여','남','남'))
d<-c(T,F,T,T)
ls.numiric(b)
ls.numeric(b)
is.numeric(b)
is.logical(c)
is.character(b)
is.factor(c)
is.complex(e)
e<-c(3i)
bb<-as.numiric(b)
bb<-as.numeric(b)
height<-c(160,140,155)
names(height) <- name
a <- c(1,5,10)
b<- c('a','b','c')
c<- c('1','2','3')
d<-c(T,F,T)
height<-c(160,140,155)
name<-c("김","박","최")
names(height) <- name
height["김"]
height["박박"]
height["박"]
a<-c(1:10)
b<-seq(1,7, by=2)
c<-seq(1, by=0.5, along=1:5)
d<-seq(1, 7, lenght = 4)
d<-seq(1, 7, length = 4)
//반복
e<-rep(c(1,2),3)
f<-rep(1:4, 2)
g<-rep(c(4,2), length = 3)
h<-rep(c(4,2), each = 3)
g<-paste("go", 1:5)
a<-c(a,4,5,6)
a<-c(a,4,5,6)
a<-c(1:3)
a<-c(a,4,5,6)
a<-c(a,4,5,6) //붙이기
b<-c(1,3,7,9)
b<-append(b,5, after=2) //b의 2번째요소 뒤에 5 대입입
b<-append(b,5, after=2) //b의 2번째요소 뒤에 5 대입입
b<-append(b,5, after=2)
b<-append(b,5, after=2) // b의 2번째요소 뒤에 5 대입입
a<-c(a,4,5,6) //붙이기
b<-c(1,3,7,9)// b의 2번째요소 뒤에 5 대입입
a<-c(a,4,5,6) //붙이기
b<-c(1,3,7,9) //b의 2번째요소 뒤에 5 대입입
a<-c(a,4,5,6) //붙이기
b<-c(1,3,7,9) #b의 2번째요소 뒤에 5 대입입
b<-append(b,5, after=2)
b<-append(b,5, after=2)
a
b
b<-append(b,5, after=2)
b
a
b
b<-append(b,5, after=2)
a
b
c<-c(11:20)
d<-c[-1]
e<-c[-2:-4]
a<-c(1,2,'A','a')
a<-matrix(1:4, nrow=2)
b<=matrix(1:9, nrow=3)
b<-matrix(1:9, nrow=3)
d<-matrix(1:6, nrow=2, byrow=T)
d
e<-c(1:4, 1,1,0,0,1,0,1,0)
f<-matrix(e, 4,3) #f는 e를 4*3 행렬로 바꿈꿈
f
f<-matrix(f, byrow=T)
f
f<-matrix(f, 4, 3, byrow=T)
f
g<-matrix(1:10, 2, 5)
rownames(g) <- c("철수", "영희")
g
g
colnames(g)<- c("국어", "영어", "과학", "도덕", "체육")
g
y <- matrix(5:8, 2)
x <- matrix(1:4, 2)
x
y
x+y
x-y
x*y
x%*%y
solve(x)
x
t(x)
t(x)
t(x)
t(x) #transition
t(x) #transition
t(x) #transition
x
t(x) #transition
x
x
t(x) #transition
t(x) #transition
t(x) #transition
a<-c(1:4, 1, 1, 0, 0, 1, 0, 1, 0)
b<-matrix(a, 4, 3)
b
c<-b[,2:3]
c
d<-b[2:3,]
d
e<-b[2,]
e
a<-array(1:24, c(3,3,2))
a
b<-c(1:6)
c<-array(1:6, c(2,3))
c
d<-array(1:8, c(2,2,2))
d
e<-c(1:24); dim(e) <- c(3,4,2)
e
f<-array(1:24, c(3,3,2))
f
dimnames(f) <-list(c("가","나","다"), c("A","B","C"))
dimnames(f) <-list(c("가","나","다"), c("A","B","C"), c("ARRAY1", "ARRAY2"))
f
dimnames(f)<-list(paste("row", c(1:3), paste("col"), c(1:3), paste("arr"), c(1:3)))
f
dimnames(f)<-list(paste("row", c(1:3), paste("col"), c(1:3), paste("arr"), c(1:2)))
f
g<-array(1:24, c(3,4,2))
g
length(g)
mode(g)
dim(g)
a<-list('top', c(2,4,6), c(T,F,T))
a
b<-list(name=c('minsu','minchul'), cnt=2, age=c(2,6))
b
c<-list(c("Abe", "Bob", "Caro", "Deb"), c("weight", "height"))
names(c) <- c("Rows", "Columns")
C
c
naems(b)
names(b)
length(b)
b$name
name <- c('KIM', 'LEE', 'CHOI', 'PARK', 'JEONG')
name <- c('KIM', 'LEE', 'CHOI', 'PARK', 'JEONG')
gender<-as.factor(c('M','F','M','F','M'))
math <- c(100, 80, 90, 70, 60)
korean <- c(10, 20, 25, 30, 40)
attend<-c(T,F,T,T,F)
a<-data.frame(name, gender, math, korean, attend)
a
name <- c('KIM', 'LEE')
gender<-as.factor(c('M','F'))
math <- c(100, 80)
korean <- c(10, 20)
attend<-c(T,F)
b<-data.frame(name, gender, math, korean, attend)
b
name <- c('SIN', 'SO')
gender<-as.factor(c('M','F'))
math <- c(100, 80)
korean <- c(10, 20)
attend<-c(T,F)
b<-data.frame(name, gender, math, korean, attend)
b
c<-rbind(a,b)
c
View(c)
View(c)
View(a)
View(a)
View(b)
View(b)
d<- rbind(a, social, science)
View(a)
View(a)
d
d
d<- rbind(a, social, science)
d<- cbind(a, social, science)
science <- c(22, 33, 44, 55, 66)
d
View(c)
View(c)
e<- cbind(a, social, science)
e<- cbind(a, social, science)
e<- cbind(a, social, science)
social<-c(100, 40, 50, 60, 70)
science<-c(22, 33, 44, 55, 66)
d<- cbind(a, social, science)
View(d)
View(d)
e<-transform(a, social=c(2,3,4,5,6), science =c(6,7,8,9,10))
e
name <- c('KIM', 'LEE', 'CHOI', 'PARK', 'JEONG')
japanese<-c(20,21,22,2,3)
f<-data.frame(name, japanese)
f
g<-merge(a, f, key = 'name')
View(g)
View(g)
a
a$korean
a[,1:2]
a[2:3,]
a[-1]
a[-1,]
a[a$math >= 70]
a[a$math >= 70, ]
a[a$name = 'KIM']
a[a$name = "KIM"]
a[a$name = "KIM", ]
a[a$name == "KIM", ]
a[a$name == "KIM" ]
a[a$name == "KIM", ]
a[a$math >= 70 | a$korean >= 70,]
a[a$math >= 50 | a$korean >= 70,]
a[a$math >= 80 | a$korean >= 30,]
a[a$math >= 80 | a$korean >= 40,]
h<-subset(a, select=c(name, math, korean))
h
h<-subset(a, select=c(name, math, korean), subst = (math>=90 & korean>=20))
h
View(h)
View(h)
h<-subset(a, select=c(name, math, korean), subset = (math>=90 & korean>=20))
h
a<-a[,x(1,2,6,5,4,3)]
View(a)
View(a)
i<- a(order(math, english, math))
i<- a[order(math, english, math)]
i<- a[order(math, attend, math)]
View(i)
View(i)
i<- a[order(math, attend, -korean),] #수학을 오름차순, korean을 내림차순으로
View(i)
View(i)
setwd("C:/R/R1data/data_R_01")
a<-read.csv('cosmetics.csv')
library(agricolae)
correlation(a, method= 'pearson') #서열적 자료는 spearmandlsk kendall
attach(a)
cor <- cbind(satisf_b, satisf_i, satisf_al, repurchase)
cor <- cbind(decision, satisf_b, satisf_i, satisf_al, repurchase)
#위에 대한 것들만 따로 바인드
view(cor)
#위에 대한 것들만 따로 바인드
correlation(cor, method = 'pearson')
#상관관계도표 그리기
pairs(cor)
#삼점도 그리기
library(ggplot2)
ggplot(cor, aes(x=satisf_al, y=repurchase)) + geom_point()
ggplot(as.data.frame(cor), aes(x=satisf_al, y=repurchase)) + geom_point()
ggplot(as.data.frame(cor), aes(x=satisf_al, y=repurchase)) + geom_point(color='red', fill='blue', alpha=0.5, size=6)
ggplot(as.data.frame(cor), aes(x=satisf_al, y=repurchase)) + geom_point(color='red', fill='blue', alpha=0.5, size=6, stroke = 2)
ggplot(as.data.frame(cor), aes(x=satisf_al, y=repurchase, shape= factor(decision))) + geom_point()
ggplot(as.data.frame(cor), aes(x=satisf_al, y=repurchase, shape= factor(decision))) + geom_point(size = 6)
ggplot(as.data.frame(cor), aes(x=satisf_al, y=repurchase, shape= factor(decision))) + geom_point(size = 6, alpha = 0.5)
#선형회귀
ggplot(as.data.frame(cor), aes(x=satisf_al, y=repurchase)) + geom_smooth(method = lm, color='red')
setwd("C:/R/R1data/data_R_01")
a<-read.csv('cosmetics.csv')
plot(satisf_i, satisf_al)
install.packages('prequod')
library(pequod)
#선형회귀용용
install.packages('pequod')
library(pequod)
library(pequod)
#종속~독립변수
lm(satisf_al~satisf_i, data = a)
#종속~독립변수
model1<-lm(satisf_al~satisf_i, data = a)
summary(model1)
ggplot(a, aes(x=satisf_i, y=satisf_al)) + geom_smooth(method = lm)
library(ggplot2)
ggplot(a, aes(x=satisf_i, y=satisf_al)) + geom_smooth(method = lm)
ggplot(a, aes(x=satisf_i, y=satisf_al)) + geom_smooth(method = lm)
ggplot(a, aes(x=satisf_i, y=satisf_al)) + geom_smooth(method = lm) + geom_point()
dwtest(model1)
#X값이 달라지냐에따라 Y값분포가 같냐, 다르냐?
#귀무가설은, 기각된 상태.
ncvTest(model1)
library(lmtest)
dwtest(model1)
#그래프를 한번에 2개씩 보여주는
par(mfrow=c(1,2))
plot(model1)
plot(model1)
outlierTest(model1)
influenceIndexPlot(model1)
a$pre<-model1$fitted.values #모든 예측값이 저장된 것을, pre에 저장
a%pre
a$pre
a$res<-model1$residuals
hist(a$res)
model2 <- lm(satisf_al~satisf_i + satisf_b, data=a)
summary(model2)
library(lm.beta)
install.packages('lm.beta')
library(lm.beta)
model3<-lm.beta(model2)
summary(model3)
setwd("C:/R/R1data/data_R_01")
a<-read.csv('cosmetics.csv')
model1<-lm(satisf_al~satisf_i)
model1<-lm(satisf_al~satisf_i + factor(gender))
model1<-lm(satisf_al~satisf_i + factor(a$gender))
summary(model1)
a$gender <- factor(a$gender, levels = c(1,2), labels=c('male', 'female'))
model2<-lm(satisf_al~satisf_b)
model2<-lm(satisf_al~satisf_b + satisf_i + factor(gender) + factor(decision))
model2<-lm(satisf_al~satisf_b + satisf_i + factor(a$gender) + factor(decision))
summary(model2)
